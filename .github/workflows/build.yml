name: Build project

on:
  workflow_call:

jobs:
  # Build
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.system }}
    strategy:
      fail-fast: false
      matrix:
        platform:
#          - name: Windows
#            system: "ubuntu-latest"
#            target: "StandaloneWindows64"
#          - name: macOS
#            system: "macos-latest"
#            target: "StandaloneOSX"
#          - name: Linux
#            system: "ubuntu-latest"
#            target: "StandaloneLinux64"
#          - name: Web
#            system: "ubuntu-latest"
#            target: "WebGL"
          - name: Android
            system: "windows-latest"
            target: "Android"
          - name: Android-Debug
            system: "windows-latest"
            target: "Android"
            debug: true
            parameters: "-development"
#          - name: iOS
#            system: "macos-latest"
#            target: "iOS"
    steps:
      # Get repository name
      - name: get-name
        shell: pwsh
        run: |
          $repoName = "${{ github.repository }}".Split("/")[1]
          "REPO_NAME=$repoName" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          submodules: recursive

      # Cache
      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.platform.name }}
          restore-keys: Library-

      # Pre-processor symbols
      - name: Apply csc.rsp (pre-processor symbols)
        if: matrix.platform.debug == true
        shell: pwsh
        run: |
          ' -define:DEBUG' | Out-File -FilePath "Assets\csc.rsp" -Append

      # Build
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.platform.target }}
          buildName: "${{ env.REPO_NAME }}-${{ matrix.platform.name }}"
          customParameters: "${{ matrix.platform.parameters }}"
          allowDirtyBuild: true
          androidKeystoreName: debug.keystore
          androidKeystoreBase64: ${{ secrets.USEN_ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.USEN_ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.USEN_ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.USEN_ANDROID_KEYSTORE_PASS }}

      # Compress
      - name: Compress directory as zip
        shell: pwsh
        run: |
          $zipPath = "build\${{ matrix.platform.name }}.zip"
          $sourcePath = "build\${{ matrix.platform.target }}"
          Compress-Archive -Path "$sourcePath\*" -DestinationPath $zipPath

      - name: Display structure of build files
        shell: pwsh
        run: |
          Get-ChildItem -Recurse "C:\Users\runneradmin\work"

      # Output
      - name : Upload Artifact
        uses: actions/upload-artifact@v4
        if: matrix.platform.target != 'Android'
        with:
          name: Build-${{ matrix.platform.name }}
          path: build/${{ matrix.platform.name }}.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        if: matrix.platform.target == 'Android'
        with:
          name: Build-${{ matrix.platform.name }}
          path: build/${{ matrix.platform.target }}/${{ env.REPO_NAME }}-${{ matrix.platform.name }}.apk
